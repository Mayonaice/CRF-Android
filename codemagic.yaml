workflows:
  android-debug:
    name: Android Debug Build
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      flutter: stable
      java: 17 # Updated from 11 to 17 for better compatibility
      xcode: latest
      cocoapods: default
      # Debug build without custom signing
      vars:
        PACKAGE_NAME: "com.advantage.crf" # Application ID from build.gradle
    scripts:
      - name: Set up environment
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
          echo "sdk.dir=$ANDROID_SDK_ROOT" >> "$CM_BUILD_DIR/android/local.properties"
          # Print environment for debugging
          echo "Environment variables:"
          env | sort
          
      - name: Setup project
        script: |
          # Display Flutter and Java versions
          flutter --version
          java -version
          
          # Fix potential Gradle wrapper issues
          cd android
          chmod +x ./gradlew
          ./gradlew --version
          cd ..
          
          # Update dependencies - without clean to avoid removing prior setup
          flutter pub get
          
          # Check Android setup
          flutter doctor -v
      - name: Check Gradle setup
        script: |
          # Check Android directory structure and gradle files
          ls -la android/
          cat android/gradle/wrapper/gradle-wrapper.properties
          
      - name: Build debug APK directly with Gradle
        script: |
          # Try to build using Gradle directly to bypass Flutter tool issues
          cd android
          ./gradlew assembleDebug --stacktrace --info
          cd ..
          
          # Check if APK was built with Gradle
          APK_PATH="android/app/build/outputs/apk/debug/app-debug.apk"
          if [ -f "$APK_PATH" ]; then
            echo "Debug build successful with Gradle. Copying APK..."
            mkdir -p build/app/outputs/flutter-apk/
            timestamp=$(date +"%Y%m%d%H%M")
            cp $APK_PATH build/app/outputs/flutter-apk/crf-debug-${timestamp}.apk
            echo "Created: crf-debug-${timestamp}.apk"
            ls -la build/app/outputs/flutter-apk/
          else
            echo "Failed to create APK with direct Gradle build."
            echo "Attempting Flutter build with specific options..."
            # Try Flutter build with specific options
            flutter build apk --debug --no-tree-shake-icons
          fi
    artifacts:
      - build/app/outputs/flutter-apk/*.apk
      - android/app/build/outputs/apk/debug/*.apk
      - android/app/build/reports/
      - $HOME/.gradle/daemon
      - $HOME/.gradle/caches
      - android/gradlew.log
      - flutter_drive.log
    # Artifact publishing and notification
    publishing:
      scripts:
        - echo "Build completed successfully!"