workflows:
  android-debug:
    name: Android Debug Build
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      flutter: stable
      java: 11
      # Debug build without custom signing
      vars:
        PACKAGE_NAME: "com.advantage.crf" # Application ID from build.gradle
    scripts:
      - name: Set up environment
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
          echo "sdk.dir=$ANDROID_SDK_ROOT" >> "$CM_BUILD_DIR/android/local.properties"
          # Print environment for debugging
          echo "Environment variables:"
          env | sort
          
      - name: Setup project
        script: |
          # Clean any previous builds
          flutter clean
          
          # Update dependencies
          flutter pub get
          
          # Check Android setup
          flutter doctor -v
      - name: Build debug APK
        script: |
          # Add verbose output flag for debugging
          echo "Building debug APK without signing..."
          flutter build apk --debug --verbose
          
          # Check if build was successful and rename
          if [ -f "build/app/outputs/flutter-apk/app-debug.apk" ]; then
            echo "Debug build successful. Renaming APK..."
            timestamp=$(date +"%Y%m%d%H%M")
            cp build/app/outputs/flutter-apk/app-debug.apk build/app/outputs/flutter-apk/crf-debug-${timestamp}.apk
            echo "Created: crf-debug-${timestamp}.apk"
            ls -la build/app/outputs/flutter-apk/
          else
            echo "Failed to create APK file."
            echo "Checking directory structure:"
            find build -type d | sort
            exit 1
          fi
    artifacts:
      - build/app/outputs/flutter-apk/*.apk
      - $HOME/.gradle/daemon
      - $HOME/.gradle/caches
      - flutter_drive.log
      - build/reports
    # Artifact publishing and notification
    publishing:
      scripts:
        - echo "Build completed successfully!"